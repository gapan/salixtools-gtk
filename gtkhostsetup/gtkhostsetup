#!/usr/bin/env python

import gtk
import os
import sys
import re

# Internationalization
import locale
import gettext
import gtk.glade
gettext.bindtextdomain("gtkhostsetup", "/usr/share/locale")
gettext.textdomain("gtkhostsetup")
gettext.install("gtkhostsetup", "/usr/share/locale", unicode=1)
gtk.glade.bindtextdomain("gtkhostsetup", "/usr/share/locale")
gtk.glade.textdomain("gtkhostsetup")

hostname_file='./HOSTNAME'
hosts_file='./hosts'

def get_hostname():
	try:
		f = file(hostname_file)
		line = f.readline().replace('\n', '')
		f.close()
	except IOError:
		return ['','']
	if len(line) == 0:
		return ['', '']
	else:
		hostname=line.partition('.')[0]
		domain=line.partition('.')[2]
		return [hostname, domain]

def get_other_hosts():
	try:
		f = file(hosts_file)
		contents = f.readlines()
		f.close()
	except IOError:
		return [[]]
	hostlines=[]
	for line in contents:
		temp = line.replace('\t', ' ').replace('\n', '').partition('#')[0].split()
		line = ' '.join(temp)
		if not line == '':
			ip = line.partition(' ')[0]
			hostname = line.partition(' ')[2].partition('.')[0]
			domain = line.partition(' ')[2].partition('.')[2].partition(' ')[0]
			if not ip == '127.0.0.1':
				hostlines.append([ip, hostname, domain])
	return hostlines

class GTKHostSetup:
	def on_button_ok_clicked(self, widget, data=None):
		gtk.main_quit()

	def on_button_cancel_clicked(self, widget, data=None):
		gtk.main_quit()
	
	def gtk_main_quit(self, widget, data=None):
		gtk.main_quit()

	def __init__(self):
		builder = gtk.Builder()
		if os.path.exists('gtkhostsetup.glade'):
			builder.add_from_file('gtkhostsetup.glade')
		elif os.path.exists('/usr/share/salixtools/gtkhostsetup/gtkhostsetup.glade'):
			builder.add_from_file('/usr/share/salixtools/gtkhostsetup/gtkhostsetup.glade')
		self.window = builder.get_object('gtkhostsetup')

		self.entry_hostname = builder.get_object('entry_hostname')
		self.entry_domain = builder.get_object('entry_domain')
		current_hostname = get_hostname()
		self.entry_hostname.set_text(current_hostname[0])
		self.entry_domain.set_text(current_hostname[1])

		self.treeviewcolumn_ip = builder.get_object('treeviewcolumn_ip')
		self.treeviewcolumn_hostname = builder.get_object('treeviewcolumn_hostname')
		self.treeviewcolumn_domain = builder.get_object('treeviewcolumn_domain')
		self.treeviewcolumn_ip.set_title(_('IP address'))
		self.treeviewcolumn_hostname.set_title(_('Hostname'))
		self.treeviewcolumn_domain.set_title(_('Domain'))

		get_other_hosts()
		

		builder.connect_signals(self)

if __name__ == "__main__":
	app = GTKHostSetup()
	app.window.show()
	gtk.main()
