#!/usr/bin/env python
# vim:et:sta:sts=4:sw=4:ts=8:tw=79:

import gtk
import os
import sys
import subprocess
import platform
import re

# Internationalization
import locale
import gettext
locale.setlocale(locale.LC_ALL, '')
locale.bindtextdomain("gtkreposetup", "/usr/share/locale")
gettext.bindtextdomain("gtkreposetup", "/usr/share/locale")
gettext.textdomain("gtkreposetup")
_ = gettext.gettext


salixtoolsdir = '/usr/share/salixtools/'

def get_arch():
    '''
    Determine the CPU architecture. Should be:
    - 'arm' for any arm* system
    - 'i486' for 32bit systems
    - 'x86_64' for 64bit systems
    '''
    m = platform.machine()
    if re.match('i.86$', m):
        return 'i486'
    elif re.match('arm', m):
        return 'arm'
    else:
        return m

def get_salix_version():
    '''
    Read the Salix version.
    '''
    with open('/usr/share/salixtools/salix-version', 'r') as f:
        version = f.readline().strip()
    return version

def get_current_repo():
    '''
    Return the currently selected repository. Just runs the command line
    reposetup tool with the -p option to get it.
    '''
    p = subprocess.Popen(['reposetup', '-p'], stdout=subprocess.PIPE)
    if p.wait() == 0:
        return p.communicate()[0].strip()
    else:
        return None

def get_repo_list_from_file():
    f = file('/usr/share/salixtools/reposetup/repomirrors', 'r')
    repolist = []
    while True:
        line = f.readline().rstrip()
        if len(line) == 0:
            break
        url = line.partition(' ')[0]
        country = line.partition(' ')[2]
        repolist.append([url, country])
    f.close()
    return repolist


class GTKRepoSetup:

    def on_button_about_clicked(self, widget, data=None):
        self.aboutdialog.show()

    def on_aboutdialog_response(self, widget, data=None):
        self.aboutdialog.hide()

    def on_aboutdialog_delete_event(self, widget, event):
        self.aboutdialog.hide()
        return True

    def on_button_ok_clicked(self, widget, data=None):
        
        gtk.main_quit()

    def on_button_cancel_clicked(self, widget, data=None):
        gtk.main_quit()

    def on_gtkreposetup_delete_event(self, widget, event):
        gtk.main_quit()

    def gtk_main_quit(self, widget, data=None):
        gtk.main_quit()

    def __init__(self):
        builder = gtk.Builder()
        builder.set_translation_domain("gtkreposetup")
        if os.path.exists('gtkreposetup.ui'):
            builder.add_from_file('gtkreposetup.ui')
        elif os.path.exists('/usr/share/salixtools/gtkreposetup/gtkreposetup.ui'):
            builder.add_from_file(
                '/usr/share/salixtools/gtkreposetup/gtkreposetup.ui')
        self.window = builder.get_object('gtkreposetup')
        self.aboutdialog = builder.get_object('aboutdialog')

        builder.connect_signals(self)
        self.repolist = builder.get_object('repolist')
        self.liststore_repo = builder.get_object('liststore_repo')
        self.liststore_repo.clear()
        for i in get_repo_list_from_file():
            self.liststore_repo.append(i)

if __name__ == "__main__":
    app = GTKRepoSetup()
    app.window.show()
    gtk.main()
